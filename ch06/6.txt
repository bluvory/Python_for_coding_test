# 정렬 Sorting
# 데이터를 특정한 기준에 따라서 순서대로 나열

# 선택 정렬 Selection Sort
# 데이터가 무작위로 여러 개 있을 때, 이 중에서 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸고, 그다음 작은 데이터를 선택해 앞에서 두 번째 데이터와 바꾸는 과정 반복
# 선택 정렬의 시간 복잡도 : O(N**2)

# 삽입 정렬 Insertion Sort
# 특정한 데이터를 적절한 위치에 삽입, 특정한 데이터가 적절한 위치에 들어가기 이전에 그 앞까지의 데이터는 이미 정렬되어 있다고 가정
# 현재 리스트의 데이터가 거의 정렬되어 있는 상태라면 매우 빠르게 동작
# 삽입 정렬의 시간 복잡도 : O(N**2)

# 퀵 정렬

# 계수 정렬 Count Sort
# 특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠른 정렬 알고리즘
# 데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때만 사용
# 모든 범위를 담을 수 있는 크기의 리스트(배열)를 선언
# 동일한 값을 가지는 데이터가 여러 개 등장할 때 적합
# 계수 정렬의 시간 복잡도 : O(N+K) = O(데이터개수N+데이터중최댓값K)
# 계수 정렬의 공간 복잡도 : O(N+K)

# 파이썬의 정렬 라이브러리
# sorted(data), data.sort()
# 정렬 라이브러리에서 key 활용 (key=정렬기준)
# 정렬 라이브러리의 시간 복잡도 : O(NlogN)
